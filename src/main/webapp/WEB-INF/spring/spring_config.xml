<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- Включает поддержку @Controller и др. в Spring MVC -->
    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean class="org.springframework.security.web.method.annotation.AuthenticationPrincipalArgumentResolver" />
        </mvc:argument-resolvers>
    </mvc:annotation-driven>

    <!-- Расположение статических файлов -->
    <mvc:resources mapping="/static/**" location="/static/" />

    <!--Задает вид стартовой страницы-->
    <mvc:view-controller path="/railway" view-name="index" />

    <!--  Включает Spring аннотации вроде @Autowired, @Required-->
    <context:annotation-config />

    <!-- Сканирует пакет для поиска бинов -->
    <context:component-scan base-package="system" />

    <!-- Определяет какое представление рендерить на основании вычеслений в @Controller (return ModelAndView) -->
    <bean id="resolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- Database Information -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url"
                  value="jdbc:mysql://localhost:3306/railway_app?useSSL=false"/>
        <property name="username" value="root"/>
        <property name="password" value="YarKuz90!"/>
    </bean>

    <!-- Hibernate 5 SessionFactory Bean definition -->
    <bean id="hibernate5AnnotatedSessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="annotatedClasses">
            <list>
                <value>system.model.User</value>
                <value>system.model.Train</value>
                <value>system.model.Station</value>
                <value>system.model.Ticket</value>
                <value>system.model.Schedule</value>
                <value>system.model.Road</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <!--UserDao and UserService beans-->
    <bean id="userDao" class="system.dao.UserDao">
        <property name="sessionFactory" ref="hibernate5AnnotatedSessionFactory"/>
    </bean>

    <bean id="userService" class="system.service.UserService">
        <property name="userDao" ref="userDao"/>
    </bean>

    <!--TrainDao and TrainService beans-->
    <bean id="trainDao" class="system.dao.TrainDao">
        <property name="sessionFactory" ref="hibernate5AnnotatedSessionFactory"/>
    </bean>

    <bean id="trainService" class="system.service.TrainService">
        <property name="trainDao" ref="trainDao"/>
    </bean>

    <!--StationDao and StationService beans-->
    <bean id="stationDao" class="system.dao.StationDao">
        <property name="sessionFactory" ref="hibernate5AnnotatedSessionFactory"/>
    </bean>

    <bean id="stationService" class="system.service.StationService">
        <property name="stationDao" ref="stationDao"/>
    </bean>

    <!--TicketDao and TicketService beans-->
    <bean id="ticketDao" class="system.dao.TicketDao">
        <property name="sessionFactory" ref="hibernate5AnnotatedSessionFactory"/>
    </bean>

    <bean id="ticketService" class="system.service.TicketService">
        <property name="ticketDao" ref="ticketDao"/>
    </bean>

    <!--ScheduleDao and ScheduleService beans-->
    <bean id="scheduleDao" class="system.dao.ScheduleDao">
        <property name="sessionFactory" ref="hibernate5AnnotatedSessionFactory"/>
    </bean>

    <bean id="scheduleService" class="system.service.ScheduleService">
        <property name="scheduleDao" ref="scheduleDao"/>
    </bean>

    <!--RoadDao and RoadService beans-->
    <bean id="roadDao" class="system.dao.RoadDao">
        <property name="sessionFactory" ref="hibernate5AnnotatedSessionFactory"/>
    </bean>

    <bean id="roadService" class="system.service.RoadService">
        <property name="roadDao" ref="roadDao"/>
    </bean>

    <!--<tx:annotation-driven/>-->
    <!--<tx:annotation-driven transaction-manager="tm"/>-->

    <!--<bean id="tm" class="org.springframework.orm.hibernate5.HibernateTransactionManager">-->
        <!--<property name="sessionFactory" ref="hibernate5AnnotatedSessionFactory"/>-->
    <!--</bean>-->

</beans>